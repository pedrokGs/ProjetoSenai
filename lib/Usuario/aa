import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:google_sign_in/google_sign_in.dart';

import '../FirebaseAuthService.dart';
import '../FirestoreService.dart';

class loginCadastro extends StatefulWidget {
  const loginCadastro({super.key});

  @override
  State<loginCadastro> createState() => _loginCadastroState();
}

class _loginCadastroState extends State<loginCadastro> {
  final FirebaseAuthService _authService = FirebaseAuthService();
  final FirestoreService _firestoreService = FirestoreService();
  String _tipo = "login";

  @override
  void didChangeDependencies() {
    super.didChangeDependencies();
    final args =
        ModalRoute.of(context)?.settings.arguments as Map<String, dynamic>?;
    if (args != null && args.containsKey('tipo')) {
      setState(() {
        _tipo = args['tipo'] as String;
      });
    }
  }

  Future<void> _signInWithGoogle() async {
    UserCredential? userCredential = await _authService.signInWithGoogle();
    if (userCredential != null) {
    } else {
      print("Ocorreu um erro!");
    }
  }

  late final TextEditingController _nomeController =
      new TextEditingController();
  late final TextEditingController _emailController =
      new TextEditingController();
  late final TextEditingController _senhaController =
      new TextEditingController();
  String _idioma = "";
  bool termos = false;
  final nome = "";
  final senha = "";
  final email = "";

  Future<void> _signInWithEmail() async {
    try {
      final credential = await FirebaseAuth.instance
          .createUserWithEmailAndPassword(email: email, password: senha);
    } on FirebaseAuthException catch (e) {
      if (e.code == 'weak-passowrd') {
        print("A senha é muito fraca.");
      } else if (e.code == 'email-already-in-use') {
        print("Essa conta já foi registrada.");
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFFfef3ea),
      body: Center(
        child: Container(
          decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(10),
            color: Color(0xFFedc9af),
          ),
          width: MediaQuery.of(context).size.width * 0.9,
          height: MediaQuery.of(context).size.height * 0.85,
          padding: EdgeInsets.all(30),
          margin: EdgeInsets.all(20),
          child: Form(
            child: Column(
              children: [
                Container(
                  height: 50,
                  child: Text(
                    _tipo == 'login' ? 'Login' : 'Cadastro',
                    style: TextStyle(fontWeight: FontWeight.bold, fontSize: 34),
                  ),
                ),
                _tipo == 'cadastro'
                    ? Container(
                      margin: EdgeInsets.fromLTRB(0.0, 20.0, 0.0, 10.0),
                      child: Column(
                        children: [
                          Text(
                            "Nome",
                            style: TextStyle(fontSize: 28),
                            textDirection: TextDirection.ltr,
                          ),
                          TextField(
                            controller: _nomeController,
                            decoration: InputDecoration(
                              hintText: "Qual o seu nome?",
                              border: OutlineInputBorder(),
                              fillColor: Colors.white,
                              filled: true,
                            ),
                          ),
                        ],
                      ),
                    )
                    : Container(),

                Container(
                  margin: EdgeInsets.fromLTRB(0.0, 20.0, 0.0, 10.0),
                  child: Column(
                    children: [
                      Text(
                        "Email",
                        style: TextStyle(fontSize: 28),
                        textDirection: TextDirection.ltr,
                      ),
                      TextField(
                        controller: _emailController,
                        decoration: InputDecoration(
                          hintText: "Qual seu email?",
                          border: OutlineInputBorder(),
                          fillColor: Colors.white,
                          filled: true,
                        ),
                      ),
                    ],
                  ),
                ),

                Container(
                  margin: EdgeInsets.fromLTRB(0.0, 20.0, 0.0, 10.0),
                  child: Column(
                    children: [
                      Text(
                        "Senha",
                        style: TextStyle(fontSize: 28),
                        textDirection: TextDirection.ltr,
                      ),
                      TextField(
                        controller: _senhaController,
                        decoration: InputDecoration(
                          hintText: "Qual sua senha?",
                          border: OutlineInputBorder(),
                          fillColor: Colors.white,
                          filled: true,
                        ),
                      ),
                    ],
                  ),
                ),

                _tipo == 'cadastro'
                    ? Container(
                      child: Column(
                        children: [
                          Text(
                            "Idioma",
                            style: TextStyle(fontSize: 28),
                            textDirection: TextDirection.ltr,
                          ),
                          DropdownButtonFormField<String>(
                            items:
                                <String>['Português', 'Inglês', 'Espanhol'].map(
                                  (String _idioma) {
                                    return DropdownMenuItem<String>(
                                      value: _idioma,
                                      child: Text(_idioma),
                                    );
                                  },
                                ).toList(),
                            onChanged: (String? newValue) {
                              setState(() {
                                _idioma =
                                    newValue!; // Atualiza a variável _idioma
                              });
                            },
                            decoration: InputDecoration(
                              hintText: "Qual seu idioma?",
                              border: OutlineInputBorder(),
                              fillColor: Colors.white,
                              filled: true,
                            ),
                          ),
                        ],
                      ),
                    )
                    : Container(),

                _tipo == 'cadastro'
                    ? Row(
                      children: [
                        Checkbox(
                          value: termos,
                          onChanged: (value) {
                            setState(() {
                              termos = value!;
                            });
                          },
                        ),
                        Text("Eu aceito os Termos e Contrato"),
                      ],
                    )
                    : Container(),

                _tipo == 'cadastro'
                    ? SizedBox(
                      width: MediaQuery.of(context).size.width * 0.8,
                      child: ElevatedButton(
                        style: ElevatedButton.styleFrom(
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(15),
                          ),
                          backgroundColor:
                              Theme.of(context).colorScheme.primary,
                          padding: EdgeInsets.all(10),
                        ),
                        onPressed: () async {
                          UserCredential userCredential = await _authService
                              .createUserWithEmailAndPassword(email, senha);
                          await _firestoreService.addUser(
                            userCredential.user!.uid,
                            {'email': email},
                          );
                        },
                        child: Text(
                          'Cadastro',
                          style: TextStyle(fontSize: 24, color: Colors.white),
                        ),
                      ),
                    )
                    : SizedBox(
                      width: MediaQuery.of(context).size.width * 0.8,
                      child: ElevatedButton(
                        style: ElevatedButton.styleFrom(
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(15),
                          ),
                          backgroundColor:
                              Theme.of(context).colorScheme.primary,
                          padding: EdgeInsets.all(10),
                        ),
                        onPressed: () async {
                          UserCredential userCredential = await _authService
                              .signInWithEmailAndPassword(email, senha);
                        },
                        child: Text(
                          'Login',
                          style: TextStyle(fontSize: 24, color: Colors.white),
                        ),
                      ),
                    ),
                SizedBox(height:20,),
                ElevatedButton(
                  style: ElevatedButton.styleFrom(
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(15),
                    ),
                    backgroundColor: Colors.white,
                  ),
                  onPressed: _signInWithGoogle,
                  child: Row(
                    children: [
                      Image.network(
                        'http://pngimg.com/uploads/google/google_PNG19635.png',
                        fit: BoxFit.cover,
                        height: 35,
                        width: 35,
                      ),
                      SizedBox(width: 5),
                      Text(
                        "Entrar com Google",
                        style: TextStyle(
                          color: Colors.black,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                    ],
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}
